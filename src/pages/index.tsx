import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Challenges from "@/components/Challenges";
import { useState } from "react";

const Home: NextPage = () => {
  const [isCreateActive, setIsCreateActive] = useState(false);

  return (
    <>
      <Head>
        <title>Fit-log</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex w-full flex-col items-center bg-slate-200 p-2">
        <div>
          <button
            className={
              !isCreateActive
                ? "rounded-md bg-purple-600 p-2 text-white"
                : "rounded-md bg-red-600 p-2 text-white"
            }
            onClick={() => setIsCreateActive(!isCreateActive)}
          >
            {!isCreateActive ? "Create" : "Cancel"}
          </button>
        </div>
        <Challenges />
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  // const { data: secretMessage } = api.example.getSecretMessage.useQuery(
  //   undefined, // no input
  //   { enabled: sessionData?.user !== undefined },
  // );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
